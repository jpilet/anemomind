/*
 *  Created on: 2015
 *      Author: Jonas Ã–stlund <uppfinnarjonas@gmail.com>
 */

#include "FractalFlow.h"
#include <random>
#include <server/common/logging.h>

namespace sail {

namespace {
  Flow::VelocityFunction makeFractalFlowSub(Length<double> unitLength,
      Duration<double> unitTime, Velocity<double> unitVelocity,
      Angle<double> unitAngle,
      SubdivFractals::Fractal<3> velocityFractal,
      SubdivFractals::Fractal<3> angleFractal, Angle<double> phase) {
    return [=](Flow::ProjectedPosition pos, Duration<double> time) {
      double local[3] = {pos[0]/unitLength, pos[1]/unitLength, time/unitTime};
      Angle<double> angle = angleFractal.evalOrtho(local)*unitAngle;
      Velocity<double> vel = velocityFractal.evalOrtho(local)*unitVelocity;
      return sin(angle + phase)*vel;
    };
  }
}

Flow makeFractalFlow(Length<double> unitLength,
    Duration<double> unitTime, Velocity<double> unitVelocity,
    Angle<double> unitAngle,
    SubdivFractals::Fractal<3> velocityFractal,
    SubdivFractals::Fractal<3> angleFractal) {

  // This is a bit inelegant, that we have two functions that both evaluate
  // more or less the same thing... Twice as much work. Maybe, if it turns out
  // that we only need flows to be defined as fractals, we can restructure the
  // code to avoid this.
  return Flow(makeFractalFlowSub(unitLength, unitTime, unitVelocity, unitAngle,
                                 velocityFractal, angleFractal, Angle<double>::degrees(90)),
              makeFractalFlowSub(unitLength, unitTime, unitVelocity, unitAngle,
                                 velocityFractal, angleFractal, Angle<double>::zero()));
}

using namespace SubdivFractals;

namespace {
  Array<Vertex> makeRandomCtrl(double maxv, int classCount,
    std::default_random_engine &e) {
    std::uniform_real_distribution<double> value(-maxv, maxv);
    std::uniform_int_distribution<int> index(0, classCount-1);
    const int count = Fractal<3>::ctrlCount;
    Array<Vertex> vertices(count);
    for (int i = 0; i < count; i++) {
      vertices[i] = Vertex(value(e), index(e));
    }
    return vertices;
  }
}


// Wind
Fractal<3> windVelocityFractal() {MDArray<Rule::Ptr, 2> rules(12, 12);
 constexpr double inf = std::numeric_limits<double>::infinity();rules(0,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.544061,-0.0266377,7));rules(0,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.184925,-0.0404343,8));rules(0,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.446706,-0.439793,8));rules(0,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.876508,-0.173012,7));rules(0,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.840505,0.642355,6));rules(0,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.712632,-0.497156,7));rules(0,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.871872,0.717532,3));rules(0,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.0136399,-0.167049,8));rules(0,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.784522,-0.800269,5));rules(0,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.405872,-0.322981,3));rules(0,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.146366,-0.595036,1));rules(0,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.729219,-0.26521,9));rules(1,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.68084,-0.701497,5));rules(1,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.767409,-0.175504,7));rules(1,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.879715,0.795314,11));rules(1,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.540093,0.144884,0));rules(1,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.0444293,-0.445604,10));rules(1,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.221656,0.0513405,11));rules(1,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.159725,0.761568,4));rules(1,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.486252,0.758324,0));rules(1,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.75812,-0.820294,1));rules(1,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.807143,0.125223,9));rules(1,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.53872,0.793048,10));rules(1,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.773859,-0.234761,8));rules(2,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.846356,-0.0447184,8));rules(2,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.218067,0.257533,8));rules(2,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.2752,0.588556,5));rules(2,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.00273887,-0.0985304,5));rules(2,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.865687,-0.707609,1));rules(2,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.944952,-0.523179,11));rules(2,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.60384,-0.607385,4));rules(2,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.119464,-0.134245,4));rules(2,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.200265,-0.702425,8));rules(2,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.396133,0.698556,9));rules(2,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.251501,-0.0404428,7));rules(2,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.289796,-0.245272,4));rules(3,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.331386,-0.710205,3));rules(3,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.70873,-0.711715,7));rules(3,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.841659,0.0330629,4));rules(3,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.418,-0.751219,7));rules(3,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0839083,-0.688254,9));rules(3,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.976939,0.121829,3));rules(3,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.358777,0.43831,10));rules(3,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0699859,-0.899914,0));rules(3,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.132365,-0.154895,10));rules(3,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.637608,0.86822,7));rules(3,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0738826,0.888904,4));rules(3,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.1103,0.496622,10));rules(4,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.790841,0.666756,6));rules(4,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.964065,0.842946,2));rules(4,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.0461449,0.43959,7));rules(4,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.669383,0.460896,7));rules(4,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.0697524,-0.353142,10));rules(4,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.835935,0.903507,1));rules(4,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.672751,-0.334143,6));rules(4,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.636215,0.325786,2));rules(4,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.193446,-0.506053,10));rules(4,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.674084,0.20481,7));rules(4,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.343296,0.742568,8));rules(4,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.99992,0.257506,5));rules(5,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.935461,0.710165,4));rules(5,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.15286,0.488937,3));rules(5,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.64716,0.794489,11));rules(5,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.933993,-0.0255763,6));rules(5,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.130994,-0.593683,5));rules(5,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.89424,0.906524,5));rules(5,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.922872,-0.56518,0));rules(5,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.899213,0.282748,6));rules(5,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.741914,0.00370749,7));rules(5,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.0529087,0.806113,8));rules(5,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.226585,0.662193,2));rules(5,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.456613,-0.597567,10));rules(6,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.788875,-0.278065,9));rules(6,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.332728,-0.297655,1));rules(6,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.661781,0.342703,4));rules(6,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.158725,-0.125519,8));rules(6,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.583965,-0.435561,3));rules(6,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.0670641,0.997471,9));rules(6,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.670801,0.546405,2));rules(6,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.933846,-0.787914,3));rules(6,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.58556,-0.572168,3));rules(6,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.583753,0.528127,7));rules(6,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.287332,-0.604199,1));rules(6,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.396325,0.495938,1));rules(7,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.309258,-0.235174,2));rules(7,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.96443,0.57094,4));rules(7,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.663102,-0.740781,4));rules(7,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.275617,-0.83869,6));rules(7,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.688403,0.634634,7));rules(7,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.295371,-0.436911,11));rules(7,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.48916,0.552835,3));rules(7,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.709206,0.216889,1));rules(7,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.733413,-0.747938,2));rules(7,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.8581,0.926487,2));rules(7,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.367892,0.708473,1));rules(7,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.618248,-0.908959,0));rules(8,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.717641,-0.545023,4));rules(8,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.310413,0.972727,9));rules(8,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.936323,0.948934,10));rules(8,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.668738,0.433878,7));rules(8,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.544475,-0.104372,4));rules(8,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.955077,-0.246997,10));rules(8,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.218936,0.24801,7));rules(8,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.48176,0.974083,2));rules(8,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.120649,-0.758619,5));rules(8,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.1716,-0.0327975,10));rules(8,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.274814,-0.401578,10));rules(8,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.655854,0.62656,9));rules(9,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.102559,0.387852,9));rules(9,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.612733,0.861304,5));rules(9,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.035191,0.798535,11));rules(9,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0830381,-0.44197,4));rules(9,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.93749,-0.614707,9));rules(9,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.435522,0.570146,8));rules(9,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.265877,-0.999449,7));rules(9,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.056287,0.0592394,3));rules(9,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.723996,-0.226174,10));rules(9,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.086242,-0.41501,11));rules(9,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.998184,-0.300435,9));rules(9,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.201469,-0.496614,2));rules(10,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.027518,0.21604,11));rules(10,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.109555,-0.785979,6));rules(10,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.143254,0.357419,0));rules(10,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.752524,-0.709199,8));rules(10,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.194433,0.110905,5));rules(10,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.84966,-0.487233,0));rules(10,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.313021,-0.657213,7));rules(10,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.136875,-0.252054,4));rules(10,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.826788,-0.163669,1));rules(10,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.37033,0.743742,6));rules(10,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.879517,-0.779736,11));rules(10,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.397409,-0.0500316,0));rules(11,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.835954,0.717022,11));rules(11,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.751431,-0.619484,7));rules(11,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.946386,-0.681307,1));rules(11,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.945927,0.704416,0));rules(11,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.898788,-0.435538,5));rules(11,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.732278,-0.230468,9));rules(11,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.345478,0.36673,3));rules(11,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.376084,-0.668471,0));rules(11,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.643696,0.336547,8));rules(11,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.35319,-0.358351,1));rules(11,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.109758,0.304093,11));rules(11,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.321854,-0.659307,0));Array<Vertex> ctrl(8);ctrl[0] = Vertex(-0.0990444, 9);ctrl[1] = Vertex(0.0780906, 3);ctrl[2] = Vertex(0.0467822, 10);ctrl[3] = Vertex(0.0416958, 10);ctrl[4] = Vertex(0.00511205, 4);ctrl[5] = Vertex(0.0564261, 1);ctrl[6] = Vertex(-0.0630064, 3);ctrl[7] = Vertex(0.0290692, 9);return Fractal<3>(rules, ctrl, 25);}
Fractal<3> windAngleFractal() {MDArray<Rule::Ptr, 2> rules(12, 12);
 constexpr double inf = std::numeric_limits<double>::infinity();rules(0,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.736924,-0.0826997,6));rules(0,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.905911,0.358593,11));rules(0,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0388327,-0.930856,0));rules(0,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.342299,-0.233169,0));rules(0,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.373545,0.860873,10));rules(0,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.81607,-0.168001,8));rules(0,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.524396,-0.905071,8));rules(0,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.265277,0.982075,4));rules(0,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.965101,0.506712,7));rules(0,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.263269,-0.45458,5));rules(0,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0445365,-0.450186,4));rules(0,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0269652,0.818416,0));rules(1,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.00904579,-0.361934,11));rules(1,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.467711,0.895528,0));rules(1,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.231716,0.827635,6));rules(1,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.88196,0.523029,9));rules(1,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.749269,0.376911,10));rules(1,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.472449,0.998916,10));rules(1,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.387356,0.0265474,7));rules(1,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.175838,-0.461365,4));rules(1,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0641653,-0.643345,1));rules(1,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.604811,0.0688997,5));rules(1,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.496585,0.781475,7));rules(1,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.680465,0.42942,1));rules(2,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.450824,-0.171413,0));rules(2,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.875795,-0.638208,3));rules(2,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.304117,0.362692,4));rules(2,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.000517935,0.174373,10));rules(2,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.910818,-0.703697,11));rules(2,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.71636,-0.495747,5));rules(2,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.92219,-0.600486,3));rules(2,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.746576,0.243268,9));rules(2,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0471364,-0.593499,0));rules(2,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.147005,0.894974,4));rules(2,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.771297,-0.675603,0));rules(2,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.493885,0.566306,5));rules(3,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0953997,0.863349,7));rules(3,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.359185,-0.499749,10));rules(3,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0119118,0.635123,9));rules(3,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.902735,-0.121339,9));rules(3,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.404413,0.90883,10));rules(3,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0748515,-0.793132,4));rules(3,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.753131,0.459495,10));rules(3,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.601441,0.483432,0));rules(3,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0499748,-0.869612,8));rules(3,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.335358,-0.600891,10));rules(3,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.780037,-0.72161,5));rules(3,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.568936,-0.368535,6));rules(4,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.120549,0.6133,4));rules(4,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.998233,0.260977,7));rules(4,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.998242,0.45467,3));rules(4,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.364988,-0.589476,10));rules(4,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.657416,-0.836525,9));rules(4,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.572296,-0.837878,4));rules(4,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.89509,-0.461571,8));rules(4,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.553732,-0.15508,3));rules(4,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.977368,0.966472,2));rules(4,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.72709,0.20202,2));rules(4,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.684538,-0.485663,2));rules(4,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.561179,0.392015,9));rules(5,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.505881,0.26686,0));rules(5,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.545985,0.399669,1));rules(5,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0522466,0.175978,3));rules(5,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.713909,-0.0293496,10));rules(5,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.113672,-0.367985,1));rules(5,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.378522,0.0361672,5));rules(5,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.259547,-0.106268,5));rules(5,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.441414,-0.260516,3));rules(5,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.352474,0.457217,8));rules(5,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0786053,-0.35688,5));rules(5,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.322711,0.211279,11));rules(5,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.340197,0.0834203,6));rules(6,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.970099,0.285958,6));rules(6,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.466773,-0.506534,10));rules(6,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0884968,-0.955833,1));rules(6,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.415653,0.164842,9));rules(6,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.391358,0.507725,2));rules(6,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.00861785,-0.673838,10));rules(6,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.493358,-0.987317,7));rules(6,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.8663,-0.220537,2));rules(6,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.253723,0.41864,6));rules(6,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.631864,0.372203,3));rules(6,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.792405,0.551761,2));rules(6,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.85873,0.447527,3));rules(7,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0443914,0.039977,5));rules(7,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.428115,0.391275,6));rules(7,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.33765,0.973766,6));rules(7,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.712385,-0.244899,5));rules(7,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.477917,0.0725335,0));rules(7,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.946711,-0.297363,7));rules(7,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.748134,0.908057,4));rules(7,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.948505,-0.496945,5));rules(7,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.795828,0.521235,8));rules(7,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.47276,-0.766858,2));rules(7,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0939497,-0.648051,7));rules(7,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.834987,-0.24938,10));rules(8,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.946692,-0.839294,5));rules(8,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.868061,-0.280684,9));rules(8,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.498503,0.363332,9));rules(8,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.538856,0.125204,7));rules(8,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.257069,-0.532617,7));rules(8,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.488208,-0.904723,7));rules(8,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.898314,0.242091,10));rules(8,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.187091,-0.006836,0));rules(8,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0383497,-0.869287,5));rules(8,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0645173,-0.10814,8));rules(8,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.657241,0.879451,11));rules(8,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.85933,0.0526757,1));rules(9,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.78963,-0.262876,5));rules(9,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.427093,0.743768,9));rules(9,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.399582,0.870483,7));rules(9,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0790093,-0.196616,2));rules(9,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.156843,-0.420467,1));rules(9,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.604037,0.337641,10));rules(9,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.423129,-0.234357,0));rules(9,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.534266,-0.0173138,0));rules(9,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.329378,-0.626351,11));rules(9,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.591711,-0.65769,7));rules(9,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.305017,0.0193165,9));rules(9,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.452886,0.604169,7));rules(10,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.917159,0.53413,0));rules(10,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.8583,-0.590874,1));rules(10,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.412923,-0.476443,8));rules(10,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.598711,-0.127808,5));rules(10,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.954477,-0.931514,6));rules(10,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.506348,0.645782,3));rules(10,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0730565,-0.192838,11));rules(10,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.701061,-0.37679,1));rules(10,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.279047,0.863829,8));rules(10,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0830693,-0.681568,11));rules(10,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.689172,-0.312773,1));rules(10,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0375465,0.122967,10));rules(11,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.349049,0.396921,0));rules(11,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.341982,-0.867419,1));rules(11,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.556687,0.172032,2));rules(11,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.382253,0.427391,0));rules(11,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.851006,-0.139108,6));rules(11,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.838472,0.447673,6));rules(11,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.677161,0.148721,3));rules(11,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.397116,-0.805135,6));rules(11,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.335931,0.143165,7));rules(11,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.697566,0.462728,0));rules(11,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0441269,-0.929881,2));rules(11,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.234063,0.194337,7));Array<Vertex> ctrl(8);ctrl[0] = Vertex(-0.277615, 1);ctrl[1] = Vertex(-0.509011, 6);ctrl[2] = Vertex(0.772343, 0);ctrl[3] = Vertex(0.0948025, 10);ctrl[4] = Vertex(0.628838, 2);ctrl[5] = Vertex(0.097813, 11);ctrl[6] = Vertex(-0.335375, 5);ctrl[7] = Vertex(-0.239147, 2);return Fractal<3>(rules, ctrl, 25);}

// Current
Fractal<3> currentVelocityFractal() {MDArray<Rule::Ptr, 2> rules(12, 12);
 constexpr double inf = std::numeric_limits<double>::infinity();rules(0,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.548461,0.635892,2));rules(0,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.61621,0.289331,10));rules(0,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.44105,-0.296462,2));rules(0,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.835302,-0.278962,2));rules(0,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.141356,-0.297808,10));rules(0,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.837487,0.494218,7));rules(0,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.867855,0.590029,9));rules(0,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.155985,-0.799719,0));rules(0,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.609992,0.0317514,3));rules(0,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.967824,-0.986079,11));rules(0,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.286443,-0.617387,3));rules(0,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.112878,-0.711739,4));rules(1,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.608168,0.60265,10));rules(1,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.343658,0.206293,1));rules(1,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.781708,0.488228,3));rules(1,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.00761668,0.79701,2));rules(1,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.463984,-0.0907414,11));rules(1,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0355002,0.370086,6));rules(1,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.193241,0.486283,11));rules(1,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.239369,0.65813,1));rules(1,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.791184,0.588479,9));rules(1,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.297895,-0.513287,1));rules(1,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.757993,0.426559,1));rules(1,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.862151,0.17927,11));rules(2,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.870736,-0.248259,3));rules(2,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.62087,-0.450689,1));rules(2,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.283344,0.311303,6));rules(2,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.839219,-0.844925,2));rules(2,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0331461,-0.807985,7));rules(2,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.132728,-0.206743,1));rules(2,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.156819,-0.484325,5));rules(2,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.56092,-0.534104,1));rules(2,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.201224,-0.805673,0));rules(2,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.569931,-0.173686,11));rules(2,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.509085,0.600064,1));rules(2,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.185555,0.360923,6));rules(3,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.317731,-0.233087,9));rules(3,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.744445,0.144607,8));rules(3,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.472033,-0.765052,4));rules(3,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.753549,-0.6704,9));rules(3,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.439776,-0.553623,1));rules(3,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.474945,-0.430938,1));rules(3,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.706672,0.64478,10));rules(3,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.382968,0.328632,1));rules(3,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.398002,-0.835302,0));rules(3,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.62846,0.694396,10));rules(3,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.26275,-0.597826,7));rules(3,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.912922,-0.544593,0));rules(4,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.528802,-0.631575,0));rules(4,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.280187,0.140351,11));rules(4,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.770972,-0.356156,6));rules(4,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.930644,0.439875,11));rules(4,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.287994,0.876727,0));rules(4,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.617488,-0.00706473,1));rules(4,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.318334,-0.267373,7));rules(4,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.871098,-0.997398,10));rules(4,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.159113,0.31047,6));rules(4,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.239189,0.878238,9));rules(4,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.472508,-0.824161,7));rules(4,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.817136,-0.880985,1));rules(5,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.439282,0.504447,7));rules(5,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.222668,-0.0130308,11));rules(5,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.163655,-0.95046,3));rules(5,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.923653,-0.690461,2));rules(5,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.670208,-0.629252,6));rules(5,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.892846,0.542737,4));rules(5,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.348331,0.821658,3));rules(5,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.230815,-0.49843,11));rules(5,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.00635462,-0.0194559,0));rules(5,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.999751,-0.950015,0));rules(5,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.804505,0.0700231,11));rules(5,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.416985,-0.81651,11));rules(6,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.319027,0.167365,11));rules(6,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.00914761,0.375443,6));rules(6,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.911251,-0.799136,11));rules(6,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.369982,-0.782612,9));rules(6,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.268462,-0.664143,4));rules(6,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.305964,-0.769532,8));rules(6,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.863059,-0.87772,6));rules(6,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.936119,0.627925,3));rules(6,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.128226,-0.0384968,11));rules(6,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.763811,-0.0232639,0));rules(6,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.858819,-0.999987,1));rules(6,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.149569,0.831893,3));rules(7,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.60726,-0.544784,4));rules(7,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0606054,-0.240478,7));rules(7,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.173587,-0.141704,8));rules(7,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.460587,-0.956643,4));rules(7,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.732887,-0.558722,3));rules(7,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.134965,0.435678,8));rules(7,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.481002,0.994307,1));rules(7,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.763294,0.667884,0));rules(7,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.238244,-0.296251,11));rules(7,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0144408,-0.460877,6));rules(7,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.725984,0.907183,0));rules(7,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.550674,-0.487481,11));rules(8,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.803667,-0.264888,6));rules(8,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.174591,-0.438141,6));rules(8,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.86017,0.744762,1));rules(8,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.0315767,-0.73319,1));rules(8,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.712298,0.255414,10));rules(8,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.477645,-0.951267,6));rules(8,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.265671,0.0998944,11));rules(8,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.459342,-0.0879768,2));rules(8,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.542638,0.0969637,4));rules(8,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.039476,0.944129,5));rules(8,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.568767,-0.941528,4));rules(8,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.274739,0.294738,3));rules(9,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.520422,0.624007,4));rules(9,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.817123,0.0453064,2));rules(9,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.591815,-0.867853,6));rules(9,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.00488218,-0.293227,4));rules(9,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.446705,-0.0964485,11));rules(9,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.741052,0.647224,5));rules(9,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.459308,-0.699535,11));rules(9,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.222935,0.632881,11));rules(9,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.929984,-0.655587,3));rules(9,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.423271,-0.537335,0));rules(9,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.93668,0.22963,2));rules(9,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.683274,0.0986354,4));rules(10,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0942238,0.459904,3));rules(10,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.796288,0.261137,11));rules(10,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.736107,-0.743925,11));rules(10,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.94031,0.369315,0));rules(10,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.534265,-0.665461,3));rules(10,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.6796,0.625713,8));rules(10,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.717317,0.814772,5));rules(10,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0585769,0.621493,2));rules(10,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.305909,-0.548603,3));rules(10,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.263163,0.750207,10));rules(10,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.382459,-0.484677,6));rules(10,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.784699,0.133718,2));rules(11,0)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.803754,0.22104,0));rules(11,1)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.550542,0.707252,10));rules(11,2)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.284108,0.731806,2));rules(11,3)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.502605,-0.101384,6));rules(11,4)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.0285293,-0.989021,3));rules(11,5)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.739698,0.651571,11));rules(11,6)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.380332,0.37919,0));rules(11,7)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.636887,0.98789,2));rules(11,8)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.156995,-0.795521,4));rules(11,9)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.360559,-0.378517,7));rules(11,10)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),0.515734,-0.154799,7));rules(11,11)=Rule::Ptr(new BoundedRule(MaxSlope(0.1,1),-0.860483,-0.0688876,7));Array<Vertex> ctrl(8);ctrl[0] = Vertex(-0.0110248, 11);ctrl[1] = Vertex(0.0313758, 0);ctrl[2] = Vertex(-0.0503091, 2);ctrl[3] = Vertex(-0.0111974, 9);ctrl[4] = Vertex(0.0303575, 6);ctrl[5] = Vertex(0.0669889, 7);ctrl[6] = Vertex(0.0414791, 10);ctrl[7] = Vertex(-0.00242899, 2);return Fractal<3>(rules, ctrl, 25);}
Fractal<3> currentAngleFractal() {MDArray<Rule::Ptr, 2> rules(12, 12);
 constexpr double inf = std::numeric_limits<double>::infinity();rules(0,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.691535,-0.0896016,6));rules(0,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.851539,-0.937625,2));rules(0,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.970862,-0.33286,3));rules(0,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.674264,-0.240835,7));rules(0,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.924634,-0.843572,6));rules(0,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.424257,-0.121359,7));rules(0,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.996671,-0.79826,3));rules(0,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.301462,0.970978,1));rules(0,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.921912,-0.559219,1));rules(0,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.124979,-0.434813,6));rules(0,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.703299,0.115221,9));rules(0,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.70676,-0.5321,11));rules(1,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.24992,0.491044,11));rules(1,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.142781,-0.0723981,1));rules(1,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.726721,0.86195,10));rules(1,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.258282,0.0880979,9));rules(1,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.620756,0.530418,10));rules(1,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0368746,0.939334,2));rules(1,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.193895,0.098957,1));rules(1,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.54218,-0.896129,10));rules(1,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.989322,-0.000453702,8));rules(1,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.889295,0.823546,2));rules(1,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.434345,0.821706,8));rules(1,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.663128,-0.579872,6));rules(2,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.473695,-0.528332,7));rules(2,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0442617,0.21374,8));rules(2,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.63841,0.0835925,11));rules(2,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.586572,-0.0935436,4));rules(2,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.404559,0.322355,4));rules(2,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.313702,0.376802,11));rules(2,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.804608,0.94848,0));rules(2,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.672899,-0.976843,7));rules(2,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.780146,-0.853923,6));rules(2,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0371404,-0.182655,6));rules(2,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.398059,-0.977714,3));rules(2,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.491589,0.108618,3));rules(3,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.676759,0.61662,3));rules(3,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.171102,0.0593292,0));rules(3,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.24209,-0.0134905,1));rules(3,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.123418,0.987611,10));rules(3,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.121699,0.964336,3));rules(3,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.103843,0.0130898,5));rules(3,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.834805,-0.654146,4));rules(3,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.471272,0.713006,2));rules(3,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.582313,-0.498508,3));rules(3,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.437796,-0.0270302,4));rules(3,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.175579,0.831375,11));rules(3,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.995764,0.175321,9));rules(4,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.913186,-0.739802,6));rules(4,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.362671,0.127724,9));rules(4,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.387877,0.969844,7));rules(4,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0431466,0.615479,8));rules(4,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.591694,-0.672127,3));rules(4,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.58611,0.578401,1));rules(4,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.505949,0.0341396,4));rules(4,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.334611,0.56042,11));rules(4,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.645597,0.372862,10));rules(4,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.536788,0.170515,5));rules(4,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0444826,0.627245,6));rules(4,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.173972,0.797278,5));rules(5,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0719343,0.316129,1));rules(5,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.358085,0.490528,7));rules(5,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.440616,-0.989637,1));rules(5,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.853539,0.562712,3));rules(5,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.476325,-0.0536193,10));rules(5,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.783572,0.504812,8));rules(5,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0521558,0.0127801,10));rules(5,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.917412,0.836871,1));rules(5,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.207024,0.541236,9));rules(5,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.162654,0.294192,8));rules(5,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.455729,-0.639184,1));rules(5,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.983706,-0.150135,10));rules(6,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.889621,0.891926,9));rules(6,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.506417,-0.916793,2));rules(6,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.722859,0.909303,9));rules(6,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0239484,0.996599,5));rules(6,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.192585,-0.275885,1));rules(6,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.22582,0.798413,11));rules(6,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.166321,0.449927,5));rules(6,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.185411,0.335037,11));rules(6,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.991596,-0.739645,10));rules(6,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.343341,-0.0970809,8));rules(6,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.708014,0.197559,8));rules(6,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.759291,-0.566522,8));rules(7,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.91643,0.480954,2));rules(7,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.959084,0.521654,2));rules(7,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.458597,0.67169,0));rules(7,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.267384,-0.780957,8));rules(7,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.174328,-0.795485,7));rules(7,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.944399,-0.3402,7));rules(7,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0892805,-0.842118,9));rules(7,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.630812,0.676961,4));rules(7,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.707596,-0.442873,9));rules(7,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.795784,-0.17437,2));rules(7,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0618612,0.450583,11));rules(7,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.718303,0.60312,9));rules(8,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.735777,-0.92268,9));rules(8,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.957203,0.459769,1));rules(8,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.379345,-0.699258,3));rules(8,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.955662,0.889193,9));rules(8,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.577315,0.164234,7));rules(8,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.863473,0.148613,4));rules(8,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.930058,-0.869545,3));rules(8,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.251585,-0.291133,11));rules(8,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.39565,-0.691139,6));rules(8,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.392835,0.615334,5));rules(8,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.676405,-0.975077,5));rules(8,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.866194,0.13412,6));rules(9,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.456906,0.021651,5));rules(9,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0899727,-0.703014,8));rules(9,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.309622,-0.934086,10));rules(9,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0159349,-0.0735809,1));rules(9,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.930661,-0.656542,3));rules(9,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.486859,-0.422582,3));rules(9,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.670069,-0.117221,5));rules(9,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.233695,0.0360218,2));rules(9,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.377701,-0.26596,6));rules(9,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.168821,-0.941746,6));rules(9,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.465774,0.0993646,6));rules(9,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.0241829,0.951295,8));rules(10,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.235601,-0.631286,5));rules(10,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.373678,0.698874,5));rules(10,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.641524,-0.531978,0));rules(10,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.7436,-0.0825639,8));rules(10,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.193474,0.641866,5));rules(10,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.690027,0.848022,10));rules(10,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.955498,-0.448833,8));rules(10,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.658093,-0.975273,9));rules(10,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.965544,0.253648,0));rules(10,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.154081,0.303244,9));rules(10,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.47411,-0.740495,9));rules(10,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.993562,0.138797,10));rules(11,0)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.232253,0.756422,1));rules(11,1)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.187339,-0.220486,7));rules(11,2)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.873864,0.183788,11));rules(11,3)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.727524,-0.0545417,1));rules(11,4)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.429528,-0.856037,9));rules(11,5)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.917387,0.365287,2));rules(11,6)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.311207,-0.365976,0));rules(11,7)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.543326,-0.557574,11));rules(11,8)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.572474,0.302479,4));rules(11,9)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),0.481318,0.0670583,0));rules(11,10)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.0325537,0.935335,7));rules(11,11)=Rule::Ptr(new BoundedRule(MaxSlope(1,1),-0.308637,-0.986887,2));Array<Vertex> ctrl(8);ctrl[0] = Vertex(0.944455, 7);ctrl[1] = Vertex(0.0296223, 2);ctrl[2] = Vertex(0.981844, 5);ctrl[3] = Vertex(0.339625, 5);ctrl[4] = Vertex(-0.393136, 6);ctrl[5] = Vertex(-0.610516, 9);ctrl[6] = Vertex(-0.395641, 0);ctrl[7] = Vertex(-0.0242175, 8);return Fractal<3>(rules, ctrl, 25);}


WindCurrentPair makeWindCurrentPair001() {
  std::default_random_engine e;
  Flow wind, current;
  Length<double> unitLength = Length<double>::nauticalMiles(1000);
  Duration<double> unitTime = Duration<double>::days(7);
  int depth = 25;
  int classCount = 12;

  const bool gen = false;

  {
    Velocity<double> unitVelocity = Velocity<double>::metersPerSecond(200.0);
    Angle<double> unitAngle = Angle<double>::degrees(1200);

    double angleBd = 1.0;
    MaxSlope angleMaxSlope(angleBd, 1.0);
    double bd = 0.1;
    MaxSlope velMaxSlope(bd, 1.0);


    Fractal<3> velfrac, anglefrac;
    if (gen) {
      MDArray<Rule::Ptr, 2> angleRules = makeRandomBoundedRules(classCount, angleMaxSlope, e);
      MDArray<Rule::Ptr, 2> velRules = makeRandomBoundedRules(classCount, velMaxSlope, e);
      Array<Vertex> angleCtrl = makeRandomCtrl(angleBd, classCount, e);
      Array<Vertex> velCtrl = makeRandomCtrl(bd, classCount, e);

      velfrac = Fractal<3>(velRules, velCtrl, depth);
      anglefrac = Fractal<3>(angleRules, angleCtrl, depth);
      velfrac.generateCode("windVelocityFractal");
      anglefrac.generateCode("windAngleFractal");
    } else {
      velfrac = windVelocityFractal();
      anglefrac = windAngleFractal();
    }

    wind = makeFractalFlow(unitLength, unitTime,
          unitVelocity, unitAngle,
          velfrac,
          anglefrac);
  }{
    Velocity<double> unitVelocity = Velocity<double>::metersPerSecond(10.0);
    Angle<double> unitAngle = Angle<double>::degrees(1200);

    double angleBd = 1.0;
    MaxSlope angleMaxSlope(angleBd, 1.0);
    double bd = 0.1;
    MaxSlope velMaxSlope(bd, 1.0);

    Fractal<3> velfrac, anglefrac;
    if (gen) {
      MDArray<Rule::Ptr, 2> angleRules = makeRandomBoundedRules(classCount, angleMaxSlope, e);
      MDArray<Rule::Ptr, 2> velRules = makeRandomBoundedRules(classCount, velMaxSlope, e);
      Array<Vertex> angleCtrl = makeRandomCtrl(angleBd, classCount, e);
      Array<Vertex> velCtrl = makeRandomCtrl(bd, classCount, e);

      velfrac = Fractal<3>(velRules, velCtrl, depth);
      anglefrac = Fractal<3>(angleRules, angleCtrl, depth);
      velfrac.generateCode("currentVelocityFractal");
      anglefrac.generateCode("currentAngleFractal");
    } else {
      velfrac = currentVelocityFractal();
      anglefrac = currentAngleFractal();
    }
    current = makeFractalFlow(unitLength, unitTime,
          unitVelocity, unitAngle,
          velfrac,
          anglefrac);
  }
  return WindCurrentPair(wind, current);
}


}
